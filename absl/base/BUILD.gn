import("../../config.gni")

config("abseil_config") {
  include_dirs = [ "absl" ]
}

source_set("spinlock_wait") {
  public = [
    "internal/scheduling_mode.h",
    "internal/spinlock_wait.h",
  ]
  sources = [
    "internal/spinlock_akaros.inc",
    "internal/spinlock_linux.inc",
    "internal/spinlock_posix.inc",
    "internal/spinlock_wait.cc",
    "internal/spinlock_win32.inc",
  ]
  public_deps = [
    ":core_headers",
  ]
}

source_set("config") {
  public = [
    "config.h",
    "policy_checks.h",
  ]
  public_configs = [ "../..:abseil_config" ]
}

source_set("dynamic_annotations") {
  public = [
    "dynamic_annotations.h",
  ]
  sources = [
    "dynamic_annotations.cc",
  ]
  defines = [ "__CLANG_SUPPORT_DYN_ANNOTATION__" ]
  public_configs = [ "../..:abseil_config" ]
}

source_set("core_headers") {
  public = [
    "attributes.h",
    "const_init.h",
    "macros.h",
    "optimization.h",
    "port.h",
    "thread_annotations.h",
  ]
  public_configs = [ "../..:abseil_config" ]
}

source_set("malloc_internal") {
  public = [
    "internal/direct_mmap.h",
    "internal/low_level_alloc.h",
  ]
  sources = [
    "internal/low_level_alloc.cc",
  ]
  deps = [
    ":base",
    ":config",
    ":core_headers",
    ":dynamic_annotations",
    ":spinlock_wait",
  ]
}

source_set("base_internal") {
  public = [
    "internal/hide_ptr.h",
    "internal/identity.h",
    "internal/inline_variable.h",
    "internal/invoke.h",
    "internal/scheduling_mode.h",
  ]
  public_configs = [ "../..:abseil_config" ]
}

source_set("base") {
  public = [
    "call_once.h",
    "casts.h",
    "internal/atomic_hook.h",
    "internal/cycleclock.h",
    "internal/low_level_scheduling.h",
    "internal/per_thread_tls.h",
    "internal/raw_logging.h",
    "internal/spinlock.h",
    "internal/sysinfo.h",
    "internal/thread_identity.h",
    "internal/tsan_mutex_interface.h",
    "internal/unscaledcycleclock.h",
    "log_severity.h",
  ]
  sources = [
    "internal/cycleclock.cc",
    "internal/raw_logging.cc",
    "internal/spinlock.cc",
    "internal/sysinfo.cc",
    "internal/thread_identity.cc",
    "internal/unscaledcycleclock.cc",
  ]
  deps = [
    ":base_internal",
    ":config",
    ":core_headers",
    ":dynamic_annotations",
    ":spinlock_wait",
  ]
}

source_set("throw_delegate") {
  public = [
    "internal/throw_delegate.h",
  ]
  sources = [
    "internal/throw_delegate.cc",
  ]

  if (abseil_are_exceptions_disabled) {
    configs += [ "//build/config:exceptions" ]
    configs -= [ "//build/config:no_exceptions" ]
  }

  deps = [
    ":base",
    ":config",
  ]
}

source_set("pretty_function") {
  public = [
    "internal/throw_delegate.h",
  ]
  public_configs = [ "../..:abseil_config" ]
}

source_set("endian") {
  public = [
    "internal/endian.h",
    "internal/unaligned_access.h",
  ]
  deps = [
    ":config",
    ":core_headers",
  ]
}

source_set("bits") {
  public = [
    "internal/bits.h",
  ]
  deps = [
    ":core_headers",
  ]
}
